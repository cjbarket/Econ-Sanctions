---
title: "Sanctions"
format: html
editor: visual
---

```{r message = FALSE}
#|: loading-necessary-pkgs

library(tidyverse) 
library(tidymodels)
library(wbstats) # for country GDPs from World Bank
library(reticulate) # for running python stuff
library(writexl) # for writing Excel files
library(tempdisagg) # trying to use for freq conv
library(tsbox) # also trying to use for freq conv
```

```{r message = FALSE}
#|: importing-python-pkgs-to-run-modules-using-R
# can also run via the command line: python3 imf.py or python3 comtrade.py

os <- import("os")
imf <- import("imf")
json <- import("json")
my_input <- import("my_input")
datetime <- import("datetime")
comtrade <- import("comtrade")
fromcomtradepkg <- import("fromcomtradepkg")
py_install("pandas")
py_install("requests")
py_install("flatten_json")
```

```{r}
#|: running-comtrade.py
# per-country exports file format: comtrade_{year}{freq} 
# total-exports file format: comtrade_total_{year}{freq}

source_python("src/new_comtrade.py")
comtrade_obj = Comtrade()
comtrade_obj$get_all_exports() # writes csv file containing all country-pair export data
comtrade_obj$get_total_exports() # writes csv file containing total-export values for each country
```

```{r}
#|: function-to-clean-and-write-over-comtrade-files
# file name passed into function must not include extension

clean_comtrade <- function(file) {
  csv <- paste(file,"csv", sep = ".")
  excel <- paste(file,"xlsx", sep = ".")
  df <- read_csv(csv) |> select(freqCode, refPeriodId, refYear, refMonth, reporterCode, reporterISO, reporterDesc, flowDesc, partnerCode, partnerISO, partnerDesc, cmdDesc, primaryValue)
  write_csv(comtrade_pairs_annual, csv)
  write_xlsx(comtrade_pairs_annual, excel)
  return(df)
}
```

```{r message = FALSE}
#|: applying-above-function-to-all-new-comtrade-files
# file names must be changed depending on queries (year, freq)
# primaryValue numbers in scientific notation ok for calculations
# in USD + months/years (depends on query)

file <- "data/comtrade_all_exports_2021A"
comtrade_pairs_annual = data.frame()
comtrade_pairs_annual <- clean_comtrade(file)
view(comtrade_pairs_annual)

file <- "data/comtrade_all_exports_2021M"
comtrade_pairs_monthly = data.frame()
comtrade_pairs_monthly <- clean_comtrade(file)
view(comtrade_pairs_monthly)

file <- "data/comtrade_total_exports_2021A"
comtrade_total_annual = data.frame()
comtrade_total_annual <- clean_comtrade(file)
view(comtrade_total_annual)

file <- "data/comtrade_total_exports_2021M"
comtrade_total_monthly = data.frame()
comtrade_total_monthly <- clean_comtrade(file)
view(comtrade_total_monthly)
```

```{r}
#|: running-imf.py
# exports from one reporter to all partners file format: imf_{country}_all_exports_{year}{freq}
# total-exports file format: imf_total_exports_{year}{freq}

source_python("src/imf.py")
imf_obj = IMF()
imf_obj$get_total_exports() # writes csv file containing total-export values for each country
imf_obj$get_reporter_exports() # writes csv file with export data for reporter to all partners
```

```{r message = FALSE}
#|: function-to-clean-and-write-over-imf-files
# divide by 1 MM to get USD

file <- "data/imf_total_exports_2021M"
csv <- paste(file,"csv", sep = ".")
excel <- paste(file,"xlsx", sep = ".")
imf_total_monthly <- read_csv(csv)
imf_total_monthly <- imf_total_monthly[,-c(1,6:7)]
for (i in 1:length(colnames(imf_total_monthly))) {
  sub = str_sub(colnames(imf_total_monthly)[i], end = 3)
  if (sub == "Obs") {
    new_name = str_sub(colnames(imf_total_monthly)[i], 5)
    beg = str_sub(new_name, end = 2)
    sub = str_sub(new_name, 3)
    s = unlist(strsplit(sub, split='_', fixed=TRUE))
    sub = paste(s[1], s[2], sep = "")
    s = unlist(strsplit(sub, split = "@", fixed=TRUE))
    sub = paste(s[1], s[2], sep = "")
    colnames(imf_total_monthly)[i] = paste(beg, sub, sep = "")
  }
  else {
    colnames(imf_total_monthly)[i] = str_sub(colnames(imf_total_monthly)[i], 2)
  }
}

view(imf_total_monthly)
imf_total_monthly <- imf_total_monthly |>
  mutate(
    
  )
imf_total_monthly <- imf_total_monthly |>
  pivot_longer(
    cols = -c(FREQ:COUNTERPART_AREA),
    names_to = c("number", "type"),
    names_pattern = '([0-9])_([A-Za-z]+)',
    values_to = "data"
  )

file <- "data/imf_total_exports_2021A"
imf_total_annual <- read_csv()

file <- "data/imf_US_all_exports_2021M"
imf_us_all_monthly <- read_csv()

file <- "data/imf_US_all_exports_2021A"
imf_us_all_annual <- read_csv()
```

```{r}
#|: applying-above-function-to-all-new-imf-files
# file names must be changed depending on queries (year, freq)
# in USD + months/years (depends on query)


```

```{r}
#|: for-finding-stuff-in-wbstats
# in USD + years

# wb_search("Export") |> view()
# wb_search("GDP") |> view()
# str(wb_cachelist, max.level = 1)
# wb_indicators <- wb_cachelist$indicators |> view()
```

```{r}
#|: using-wbstats-pkg-to-get-GDPs-and-total-exports
# in USD + years 

gdp <- c("GDP" = "NY.GDP.MKTP.CD")
exports <- c("total_exports" ="BX.GSR.GNFS.CD")
indicators <- c(gdp, exports)

wb_both <- wb_data(
  indicators, 
  country = "all",
  mrv = 3
)

file_name = "data/wb_gdp_total_exports.xlsx"
csv_name = paste(file_name, ".csv")
excel_name = paste(file_name, ".xlsx")
# write_xlsx(wb_both, "data/wb_gdp_total_exports.xlsx")
# write_csv(wb_both, "data/wb_gdp_total_exports.csv")
# 
view(wb_both)
```
