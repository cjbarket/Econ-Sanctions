---
title: "Sanctions"
format: html
editor: visual
---

```{r message = FALSE}
#|: loading-necessary-pkgs

library(writexl) # for writing Excel files
library(tempdisagg) # trying to use for freq conv
library(tsbox) # also trying to use for freq conv
library(wbstats) # for country GDPs from World Bank
library(tidyverse) 
library(tidymodels)
library(reticulate) # for running python stuff
```

```{r message = FALSE}
#|: importing-python-pkgs-to-run-modules-using-R

os <- import("os")
imf <- import("imf")
json <- import("json")
comtrade <- import("comtrade")
my_input <- import("my_input")
py_install("pandas")
py_install("requests")
py_install("flatten_json")

# syntax: comtrade$main()
```

```{python}
#|: importing-python-pkgs-to-run-modules-using-Python
# can also run via the command line: python3 [file_name].py (only comtrade.py or imf.py)

import os
import imf
import json
import pandas
import my_input
import comtrade
import requests
from flatten_json import flatten

# syntax: comtrade.main()
```

```{python}
#|: running-comtrade.py-to-get-total-and-per-country-export-data
# per-country exports file format: comtrade_{year}{freq} 
# total-exports file format: comtrade_total_{year}{freq}

comtrade.get_all_exports() # writes csv file containing all country-pair export data
comtrade.get_total_exports() # writes csv file containing total-export values for each country
# to run everything: comtrade.main()
```

```{r message = FALSE}
#|: cleaning-and-writing-over-comtrade-files
# file names must be changed depending on queries (year, freq)
# primaryValue numbers in scientific notation ok for calculations

file <- "data/comtrade_2021A"
csv <- paste(file,"csv", sep = ".")
excel <- paste(file,"xlsx", sep = ".")
comtrade_pairs_annual <- read_csv(csv) |> select(freqCode, refPeriodId, refYear, refMonth, reporterCode, reporterISO, reporterDesc, flowDesc, partnerCode, partnerISO, partnerDesc, cmdDesc, primaryValue)
# view(comtrade_pairs_annual)
# write_csv(comtrade_pairs_annual, csv)
# write_xlsx(comtrade_pairs_annual, excel)

file <- "data/comtrade_2021M"
csv <- paste(file,"csv", sep = ".")
excel <- paste(file,"xlsx", sep = ".")
comtrade_pairs_monthly <- read_csv(csv) |> select(freqCode, refPeriodId, refYear, refMonth, reporterCode, reporterISO, reporterDesc, flowDesc, partnerCode, partnerISO, partnerDesc, cmdDesc, primaryValue)
# view(comtrade_pairs_monthly)
# write_csv(comtrade_pairs_monthly, csv)
# write_xlsx(comtrade_pairs_monthly, excel)

file <- "data/comtrade_total_2021A"
csv <- paste(file,"csv", sep = ".")
excel <- paste(file,"xlsx", sep = ".")
comtrade_total_annual <- read_csv(csv) |> select(freqCode, refPeriodId, refYear, refMonth, reporterCode, reporterISO, reporterDesc, flowDesc, partnerCode, partnerISO, partnerDesc, cmdDesc, primaryValue)
# view(comtrade_total_annual)
# write_csv(comtrade_total_annual, csv)
# write_xlsx(comtrade_total_annual, excel)

file <- "data/comtrade_total_2021M"
csv <- paste(file,"csv", sep = ".")
excel <- paste(file,"xlsx", sep = ".")
comtrade_total_monthly <- read_csv(csv) |> select(freqCode, refPeriodId, refYear, refMonth, reporterCode, reporterISO, reporterDesc, flowDesc, partnerCode, partnerISO, partnerDesc, cmdDesc, primaryValue)
# view(comtrade_total_monthly)
# write_csv(comtrade_total_monthly, csv)
# write_xlsx(comtrade_total_monthly, excel)
```

```{python}
#|: running-imf.py-to-get-total-export-and-GDP-data

imf.get_countries()
imf.
```

```{r}
#|: cleaning-and-writing-over-imf-files


```

```{r}
#|: for-finding-stuff-in-wbstats
# in USD + years

wb_search("Export") |> view()
wb_search("GDP") |> view()
str(wb_cachelist, max.level = 1)
wb_indicators <- wb_cachelist$indicators |> view()
```

```{r}
#|: using-wbstats-pkg-to-get-GDPs-and-total-exports
# in USD + years 

gdp <- c("GDP" = "NY.GDP.MKTP.CD")
exports <- c("total_exports" ="BX.GSR.GNFS.CD")
indicators <- c(gdp, exports)

wb_both <- wb_data(
  indicators, 
  country = "all",
  mrv = 3
)

file_name = "data/wb_gdp_total_exports.xlsx"
csv_name = paste(file_name, ".csv")
excel_name = paste(file_name, ".xlsx")
# write_xlsx(wb_both, "data/wb_gdp_total_exports.xlsx")
# write_csv(wb_both, "data/wb_gdp_total_exports.csv")
# view(wb_both)
```
